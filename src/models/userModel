const db = require('../db/mysqldb.js');
const jwt = require('jsonwebtoken');

const getMyProfileModel = async (userId) => {
  const userQuery = "SELECT id, username, email, role, bio, created_at FROM users WHERE id = ?";
  const [users] = await db.execute(userQuery, [userId]);
  if (users.length === 0) return null;
  const user = users[0];
  const groupsQuery = `
      SELECT \`g\`.id, \`g\`.name, gm.role
      FROM \`groups\` \`g\`
      JOIN group_members gm ON \`g\`.id = gm.group_id
      WHERE gm.user_id = ?
    `;
  const [groups] = await db.execute(groupsQuery, [userId]);
  return { ...user, groups };
};

const getUserByIdModel = async (id) => {
  const userQuery = "SELECT id, username, email, role, bio, created_at FROM users WHERE id = ?";
  const [users] = await db.execute(userQuery, [id]);
  if (users.length === 0) return null;
  const user = users[0];
  const groupsQuery = `
      SELECT \`g\`.id, \`g\`.name, gm.role
      FROM \`groups\` \`g\`
      JOIN group_members gm ON \`g\`.id = gm.group_id
      WHERE gm.user_id = ?
    `;
  const [groups] = await db.execute(groupsQuery, [id]);
  return { ...user, groups };
};

const updateUserModel = async (id, updateFields) => {
    const [existing] = await db.execute("SELECT id FROM users WHERE id = ?", [id]);
    if (existing.length === 0) return null;
    
    // await db.execute(
    //   "UPDATE users SET username = ?, email = ?, bio = ?, role = ? WHERE id = ?",
    //   [username, email, bio, role, id]
    // );

    // Dynamically build the update query
    const fields = [];
    const values = [];

    for (const [key, value] of Object.entries(updateFields)) {
        if (value !== undefined) {  // Only update fields that exist in the request
            fields.push(`${key} = ?`);
            values.push(value);
        }
    }

    if (fields.length === 0) {
        return existing[0]; // No fields to update, return the existing user
    }

    values.push(id);
    
    const query = `UPDATE users SET ${fields.join(", ")} WHERE id = ?`;

    await db.execute(query, values);
   
    const [rows] = await db.execute(
      "SELECT id, username, email, role, bio, created_at FROM users WHERE id = ?",
      [id]
    );
    return rows[0];
  };

const deleteUserModel = async (id) => {
    const [users] = await db.execute("SELECT * FROM users WHERE id = ?", [id]);
    if (users.length === 0) return { error: "User not found", status: 404 };
    
    const [result] = await db.execute("DELETE FROM users WHERE id = ?", [id]);
    return result.affectedRows;
  };

  const getUsersModel = async () => {
    const query = "SELECT id, username, email, role, bio, created_at FROM users";
    const [users] = await db.execute(query);
    return users;
  };

module.exports = {
  getMyProfileModel,
  getUserByIdModel,
  updateUserModel,
  deleteUserModel,
  getUsersModel
};